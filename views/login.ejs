<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body>
  <div class="w-full min-h-screen bg-zinc-900 text-zinc  p-10">
    <form action="/login" method="post">
        <div class="max-w-md mx-auto p-6 bg-zinc-900 rounded-2xl shadow-md space-y-4">
          
    
            <input type="email" placeholder="Email" name="email"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
            <input type="password" placeholder="Password" name="password"
              class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
          
          
            <input type="submit" value="login"
              class="w-full bg-blue-600 text-zinc font-semibold py-2 rounded-lg hover:bg-blue-700 transition duration-200" />
            
          </div>
    </form>
   </div>
</body>
</html> -->

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cosmic Portal | Login</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js"></script>
    <script src="https://unpkg.com/framer-motion@10.12.16/dist/framer-motion.js"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        cosmic: {
                            100: '#e0f2fe',
                            200: '#bae6fd',
                            300: '#7dd3fc',
                            400: '#38bdf8',
                            500: '#0ea5e9',
                            600: '#0284c7',
                            700: '#0369a1',
                            800: '#075985',
                            900: '#0c4a6e',
                        },
                        nebula: {
                            100: '#f5f3ff',
                            200: '#ede9fe',
                            300: '#ddd6fe',
                            400: '#c4b5fd',
                            500: '#a78bfa',
                            600: '#8b5cf6',
                            700: '#7c3aed',
                            800: '#6d28d9',
                            900: '#5b21b6',
                        }
                    },
                    animation: {
                        'float': 'float 6s ease-in-out infinite',
                        'float-reverse': 'float-reverse 8s ease-in-out infinite',
                        'pulse-slow': 'pulse 8s cubic-bezier(0.4, 0, 0.6, 1) infinite',
                    },
                    keyframes: {
                        float: {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(-20px)' },
                        },
                        'float-reverse': {
                            '0%, 100%': { transform: 'translateY(0)' },
                            '50%': { transform: 'translateY(20px)' },
                        }
                    }
                }
            }
        }
    </script>
    <style>
        body {
            overflow-x: hidden;
        }
        #threejs-bg {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            opacity: 0.15;
        }
        .gradient-text {
            background: linear-gradient(90deg, #38bdf8 0%, #a78bfa 50%, #f472b6 100%);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        .portal-card {
            backdrop-filter: blur(10px);
            background: rgba(39, 39, 42, 0.7);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        .portal-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.3), 0 10px 10px -5px rgba(0, 0, 0, 0.1);
        }
        .portal-input {
            background: rgba(24, 24, 27, 0.5);
            border: 1px solid rgba(255, 255, 255, 0.1);
            transition: all 0.3s ease;
        }
        .portal-input:focus {
            border-color: rgba(56, 189, 248, 0.5);
            box-shadow: 0 0 0 3px rgba(56, 189, 248, 0.2);
        }
        .portal-glow {
            box-shadow: 0 0 15px rgba(56, 189, 248, 0.3);
        }
    </style>
</head>
<body class="bg-zinc-900 text-white font-sans antialiased min-h-screen flex items-center justify-center p-4">

    <!-- Three.js Background Canvas -->
    <div id="threejs-bg"></div>

    <!-- Floating Orbs Decoration -->
    <div class="fixed top-1/4 left-1/4 w-32 h-32 rounded-full bg-blue-500/20 blur-3xl -z-10 animate-[float_8s_ease-in-out_infinite]"></div>
    <div class="fixed top-3/4 right-1/4 w-48 h-48 rounded-full bg-purple-500/20 blur-3xl -z-10 animate-[float-reverse_10s_ease-in-out_infinite]"></div>
    <div class="fixed bottom-1/4 right-1/3 w-24 h-24 rounded-full bg-pink-500/20 blur-3xl -z-10 animate-[float_12s_ease-in-out_infinite]"></div>

    <!-- Main Portal Container -->
    <div class="w-full max-w-md z-10"
        data-framer-animate="{
            initial: { opacity: 0, scale: 0.95 },
            animate: { opacity: 1, scale: 1 },
            transition: { duration: 0.6 }
        }">
        
        <!-- Portal Card -->
        <form action="/login" method="post" class="portal-card rounded-2xl p-8 space-y-6 relative overflow-hidden">
            <!-- Portal Ring Decoration -->
            <div class="absolute -top-20 -right-20 w-40 h-40 rounded-full border-2 border-cosmic-400/30 pointer-events-none"></div>
            <div class="absolute -bottom-20 -left-20 w-40 h-40 rounded-full border-2 border-nebula-500/30 pointer-events-none"></div>
            
            <!-- Header -->
            <div class="text-center mb-8">
                <h1 class="text-4xl font-bold gradient-text mb-2">Cosmic Portal</h1>
                <p class="text-zinc-400">Access your interstellar account</p>
            </div>

            <!-- Form Fields -->
            <div class="space-y-5">
                <div>
                    <label class="block text-sm font-medium text-zinc-300 mb-1">Email</label>
                    <input type="email" placeholder="your@cosmic.email" name="email" required
                        class="portal-input w-full px-4 py-3 rounded-xl text-white placeholder-zinc-500 focus:outline-none" />
                </div>

                <div>
                    <label class="block text-sm font-medium text-zinc-300 mb-1">Password</label>
                    <input type="password" placeholder="••••••••" name="password" required
                        class="portal-input w-full px-4 py-3 rounded-xl text-white placeholder-zinc-500 focus:outline-none" />
                </div>

                <div class="flex items-center justify-between text-sm">
                    <div class="flex items-center">
                        <input type="checkbox" id="remember" class="h-4 w-4 rounded border-zinc-600 bg-zinc-800 focus:ring-cosmic-500">
                        <label for="remember" class="ml-2 text-zinc-400">Remember me</label>
                    </div>
                    <a href="#" class="text-cosmic-400 hover:text-cosmic-300 transition">Lost password?</a>
                </div>
            </div>

            <!-- Submit Button -->
            <button type="submit" 
                class="relative overflow-hidden w-full bg-gradient-to-r from-cosmic-600 to-nebula-600 text-white font-semibold py-3 rounded-xl hover:shadow-lg hover:shadow-cosmic-500/30 transition-all duration-300 group mt-6 portal-glow">
                <span class="relative z-10">Activate Portal</span>
                <span class="absolute inset-0 bg-gradient-to-r from-cosmic-500 to-nebula-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
            </button>

            <!-- Divider -->
            <div class="relative flex items-center py-4">
                <div class="flex-grow border-t border-zinc-700"></div>
                <span class="flex-shrink mx-4 text-zinc-500 text-sm">OR</span>
                <div class="flex-grow border-t border-zinc-700"></div>
            </div>

            <!-- Alternative Login -->
            <button type="button" 
                class="w-full flex items-center justify-center gap-2 bg-zinc-800 hover:bg-zinc-700/80 text-white font-medium py-2.5 px-4 rounded-xl transition duration-200 border border-zinc-700">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="24" height="24">
                    <path fill="#FFC107" d="M43.611,20.083H42V20H24v8h11.303c-1.649,4.657-6.08,8-11.303,8c-6.627,0-12-5.373-12-12c0-6.627,5.373-12,12-12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C12.955,4,4,12.955,4,24c0,11.045,8.955,20,20,20c11.045,0,20-8.955,20-20C44,22.659,43.862,21.35,43.611,20.083z"/>
                    <path fill="#FF3D00" d="M6.306,14.691l6.571,4.819C14.655,15.108,18.961,12,24,12c3.059,0,5.842,1.154,7.961,3.039l5.657-5.657C34.046,6.053,29.268,4,24,4C16.318,4,9.656,8.337,6.306,14.691z"/>
                    <path fill="#4CAF50" d="M24,44c5.166,0,9.86-1.977,13.409-5.192l-6.19-5.238C29.211,35.091,26.715,36,24,36c-5.202,0-9.619-3.317-11.283-7.946l-6.522,5.025C9.505,39.556,16.227,44,24,44z"/>
                    <path fill="#1976D2" d="M43.611,20.083H42V20H24v8h11.303c-0.792,2.237-2.231,4.166-4.087,5.571c0.001-0.001,0.002-0.001,0.003-0.002l6.19,5.238C36.971,39.205,44,34,44,24C44,22.659,43.862,21.35,43.611,20.083z"/>
                </svg>
                Sign in with Google
            </button>

            <!-- Footer -->
            <div class="text-center text-sm text-zinc-500 mt-4">
                New to the cosmos? <a href="/" class="text-cosmic-400 hover:text-cosmic-300 transition">Create account</a>
            </div>
        </form>
    </div>

    <script>
        // Three.js Background Animation
        document.addEventListener('DOMContentLoaded', function() {
            // Set up Three.js scene
            const scene = new THREE.Scene();
            const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            const renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.getElementById('threejs-bg').appendChild(renderer.domElement);

            // Create particles with different colors
            const particlesGeometry = new THREE.BufferGeometry();
            const particleCount = 1200;
            
            const posArray = new Float32Array(particleCount * 3);
            const colorArray = new Float32Array(particleCount * 3);
            
            for(let i = 0; i < particleCount * 3; i++) {
                posArray[i] = (Math.random() - 0.5) * 10;
                // Create color variations
                if (i % 3 === 0) {
                    colorArray[i] = Math.random() * 0.5 + 0.5; // Blues
                } else if (i % 3 === 1) {
                    colorArray[i] = Math.random() * 0.3; // Purples
                } else {
                    colorArray[i] = Math.random() * 0.5 + 0.5; // Pinks
                }
            }
            
            particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
            particlesGeometry.setAttribute('color', new THREE.BufferAttribute(colorArray, 3));
            
            const particlesMaterial = new THREE.PointsMaterial({
                size: 0.03,
                transparent: true,
                opacity: 0.8,
                vertexColors: true,
                blending: THREE.AdditiveBlending
            });
            
            const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
            scene.add(particlesMesh);
            
            camera.position.z = 3;
            
            // Animation loop with varied movement
            function animate() {
                requestAnimationFrame(animate);
                
                particlesMesh.rotation.x += 0.0001;
                particlesMesh.rotation.y += 0.0002;
                particlesMesh.rotation.z += 0.00005;
                
                renderer.render(scene, camera);
            }
            
            animate();
            
            // Handle window resize
            window.addEventListener('resize', function() {
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                renderer.setSize(window.innerWidth, window.innerHeight);
            });
            
            // Framer Motion animations
            if (typeof Motion !== 'undefined') {
                document.querySelectorAll('[data-framer-animate]').forEach(el => {
                    const config = JSON.parse(el.getAttribute('data-framer-animate'));
                    Motion.animate(el, config.animate, {
                        ...config.transition,
                        initial: config.initial
                    });
                });
            }
        });
    </script>
</body>
</html>